---
import type { HTMLAttributes } from 'astro/types';
import twMerge from '$lib/tailwind';
import bundle from './bundle';

interface Props extends Omit<HTMLAttributes<'svg'>, 'class'> {
  icon: keyof typeof bundle;
  class?: ClassName;
  color?: string;
  gradient?: boolean;
  size?: number | string;
}

const {
  icon,
  class: className,
  color = 'currentcolor',
  gradient,
  size = '1em',
  ...props
} = Astro.props;

type Data = {
  body: string;
  view?: string;
};
const { body, view: viewBox = '0 0 256 256' } = (
  typeof bundle[icon] === 'string' ? { body: bundle[icon] } : bundle[icon]
) as Data;

const id = `_${Math.floor((1 + Math.random()) * 0x1000)
  .toString(16)
  .substring(1)}`;
---

<svg
  class:list={twMerge('align-middle linecap-round linejoin-round', className)}
  xmlns='http://www.w3.org/2000/svg'
  width={size}
  height={size}
  {viewBox}
  stroke={gradient ? `url(#${id})` : color}
  fill={gradient ? `url(#${id})` : color}
  aria-hidden='true'
  {...props}>
  <g set:html={body} />
  {
    gradient && (
      <linearGradient
        {id}
        x1='23'
        x2='235'
        y1='43'
        y2='202'
        gradientUnits='userSpaceOnUse'>
        <stop stop-color='var(--gradient-from)' />
        <stop
          offset='.5'
          stop-color='var(--gradient-via)'
        />
        <stop
          offset='1'
          stop-color='var(--gradient-to)'
        />
      </linearGradient>
    )
  }
</svg>
