---
import Icon from '$lib/icons/Icon.astro';
import ThemeToggle from './ThemeToggle.astro';
import twMerge from '$lib/tailwind';

import nav from '$lib/configs/nav';
const {
  navbar: { inners, outers }
} = nav;

const current = (href: string) =>
  Astro.url.pathname === href || Astro.url.pathname === `${href}/`
    ? 'page'
    : href !== '/' && Astro.url.pathname.startsWith(`${href}/`)
    ? 'step'
    : undefined;
---

<nav
  class:list={[
    'relative z-50 mb-6',
    'font-medium',
    'bp:px-20 bp:py-10',
    'bp:grid bp:grid-cols-[1fr_auto_1fr] bp:items-center bp:gap-4'
  ]}>
  <div class:list={['p-6 bp:p-0', 'flex justify-between gap-2', 'menu-header']}>
    <a
      class:list={[
        'flex items-center gap-2',
        'leading-tight text-light no-underline dark:text-dark',
        'bp:text-xl',
        'site-title'
      ]}
      href='/'>
      <Icon
        class='text-impact'
        icon='terminal-window'
        size='2.1em'
        gradient
      />
       DAKS.DEV
    </a>
    <menu-button>
      <template>
        <button
          class:list={[
            'relative flex p-2 ',
            'text-light-300 dark:text-dark-300',
            'rounded-full border-0 bg-gradient-menu-toogle shadow-md',
            'aria-expanded:bg-gradient-menu-toogle-expanded aria-expanded:text-light dark:aria-expanded:text-dark',
            'before:absolute before:-inset-px before:-z-10 before:rounded-full before:bg-gradient-stroke before:content-null',
            'bp:hidden'
          ]}
          aria-label='menu toggle'
          aria-expanded='false'>
          <span class='sr-only'>menu toggle</span>
          <Icon
            icon='list'
            size='1.5rem'
          />
        </button>
      </template>
    </menu-button>
  </div>
  <div
    id='menu-content'
    hidden>
    <menu
      class:list={[
        'm-0 p-8',
        'flex list-none flex-col gap-4',
        'text-lg leading-snug',
        'border border-light-800 bg-light-950 dark:border-dark-800 dark:bg-dark-950',
        'bp:relative bp:px-2.5 bp:py-2',
        'bp:flex-row',
        'bp:text-sm',
        'bp:rounded-full bp:border-0 bp:bg-gradient-menu-items bp:shadow-md',
        'bp:before:content-null',
        'bp:before:absolute bp:before:-inset-px bp:before:-z-10',
        'bp:before:rounded-full bp:before:bg-gradient-stroke bp:before:content-null'
      ]}>
      {
        inners.map(({ class: className, href, label, icon, ...props }) => (
          <li>
            <a
              class={twMerge('inner', className)}
              {href}
              {...props}
              aria-label={icon ? label : undefined}
              aria-current={current(href)}>
              {icon ? (
                <>
                  <span class='sr-only'>{label}</span>
                  <Icon {icon} />
                </>
              ) : (
                <Fragment set:html={label} />
              )}
            </a>
          </li>
        ))
      }
    </menu>
    <div
      class:list={[
        'py-6 pl-6 pr-8',
        'flex justify-between gap-3',
        'rounded-b-xl rounded-t-none bg-light-950 shadow-lg dark:bg-dark-950',
        'bp:items-center bp:justify-self-end bp:bg-transparent bp:p-0 bp:shadow-none dark:bp:bg-transparent'
      ]}>
      {
        outers && (
          <div class:list={['flex flex-wrap gap-2.5', 'bp:hidden xl:flex xl:justify-end xl:gap-0']}>
            {outers.map(({ class: className, href, label, icon, ...props }) => (
              <a
                class={twMerge('outer', className)}
                {href}
                {...props}
                aria-label={icon ? label : undefined}>
                {icon ? (
                  <>
                    <span class='sr-only'>{label}</span>
                    <Icon
                      {icon}
                      size='1.625rem'
                    />
                  </>
                ) : (
                  <Fragment set:html={label} />
                )}
              </a>
            ))}
          </div>
        )
      }
      <div class='flex items-center'>
        <ThemeToggle />
      </div>
    </div>
  </div>
</nav>

<script>
  class MenuButton extends HTMLElement {
    constructor() {
      super();

      // Inject menu toggle button when JS runs.
      this.appendChild(this.querySelector('template')!.content.cloneNode(true));
      const btn = this.querySelector('button')!;

      // Hide menu (shown by default to support no-JS browsers).
      const menu = document.getElementById('menu-content')!;
      menu.hidden = true;
      // Add "menu-content" class in JS to avoid covering content in non-JS browsers.
      menu.classList.add('menu-content');

      /** Set whether the menu is currently expanded or collapsed. */
      const setExpanded = (expand: boolean) => {
        btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
        menu.hidden = !expand;
      };

      // Toggle menu visibility when the menu button is clicked.
      btn.addEventListener('click', () => setExpanded(menu.hidden));

      // Hide menu button for large screens.
      const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
        setExpanded(e.matches);
        btn.hidden = e.matches;
      };
      const mediaQueries = window.matchMedia('(min-width: 800px)');
      handleViewports(mediaQueries);
      mediaQueries.addEventListener('change', handleViewports);
    }
  }
  customElements.define('menu-button', MenuButton);
</script>

<style lang="postcss">
  .inner {
    @apply inline-block
           text-light-300 no-underline aria-[current]:text-light dark:aria-[current]:text-dark
           bp:py-2 bp:px-4 bp:rounded-full
           bp:ready:transition-colors bp:ready:duration-200
           bp:oversee:text-light-100 dark:bp:oversee:text-dark-100 bp:oversee:bg-impact-subtle-overlay
           bp:aria-[current]:bg-impact bp:aria-[current]:text-impact-text-over
           forced-colors:text-selected;
  }

  .outer {
    @apply flex p-2
           oversee:text-impact-text-over text-impact-dark no-underline
           ready:transition-colors ready:duration-200;
  }

  .menu-content {
    @apply absolute inset-x-0 bp:contents;
  }
</style>
